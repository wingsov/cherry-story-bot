require('dotenv').config()

const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Instagram-—Ç–æ–∫–µ–Ω–∞
const refreshAccessToken = async () => {
    try {
        const url = `https://graph.instagram.com/refresh_access_token?grant_type=ig_refresh_token&access_token=${process.env.INSTAGRAM_TOKEN}`;
        const response = await axios.get(url);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        process.env.INSTAGRAM_TOKEN = response.data.access_token;

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é INSTAGRAM_TOKEN_TIMESTAMP —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        const currentTimeInSeconds = Math.floor(Date.now() / 1000);
        process.env.INSTAGRAM_TOKEN_TIMESTAMP = currentTimeInSeconds.toString();

        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ñ–∞–π–ª .env
        const envData = Object.keys(process.env).reduce((acc, key) => {
            return `${acc}${key}=${process.env[key]}\n`;
        }, '');
        fs.writeFileSync('.env', envData);

        console.log('INSTAGRAM_TOKEN and TIMESTAMP have been successfully updated!');
    } catch (error) {
        console.error('An error occurred while updating the token:', error);
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Instagram-—Ç–æ–∫–µ–Ω–∞, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
const checkAndRefreshTokenIfNeeded = async () => {
    const currentTimeInSeconds = Math.floor(Date.now() / 1000);
    const tokenTimestamp = parseInt(process.env.INSTAGRAM_TOKEN_TIMESTAMP);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 50 –¥–Ω–µ–π (50 * 24 * 60 * 60 —Å–µ–∫—É–Ω–¥) —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    if (currentTimeInSeconds - tokenTimestamp > 50 * 24 * 60 * 60) {
        await refreshAccessToken();
    } else {
        console.log('The token is still valid, no update required.');
    }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, {polling: true});

//–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–∫–∫–∞—É–Ω—Ç–∞ Instagram
const instagramLink = 'https://www.instagram.com/_cherry_story_/';

// Instagram API
const instaPosts = `https://graph.instagram.com/me/media?fields=id,media_type,media_url,caption,timestamp,thumbnail_url,permalink,children{fields=id,media_url,thumbnail_url,permalink}&limit=1000&access_token=${process.env.INSTAGRAM_TOKEN}`

// Instagram API
const instaPostsLimit10 = `https://graph.instagram.com/me/media?fields=id,media_type,media_url,caption,timestamp,thumbnail_url,permalink,children{fields=id,media_url,thumbnail_url,permalink}&limit=10&access_token=${process.env.INSTAGRAM_TOKEN}`


//–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ—Å—Ç—ã –∏–∑ Instagram API
let nextInstaPostsUrl = instaPostsLimit10;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
bot.on('message', async (msg) => {
    const messageId = msg.message_id;
    const chatId = msg.chat.id;
    const text = msg.text;

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start
    if (text === "/start") {
        try {
            await bot.sendPhoto(chatId, 'https://t.me/teemonvideoeditor/30', {
                disable_notification: true,
                protect_content: true
            });
            await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç ${msg.from.first_name}!üíã\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –Æ–ª—è, —è —è–≤–ª—è—é—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±—Ä–µ–Ω–¥–∞ —É–∫—Ä–∞—à–µ–Ω–∏–π\nCherry Story.\n\n –ü—Ä–∏–≥–ª–∞—à–∞—é –í–∞—Å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ Instagram, –≥–¥–µ –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –∫—Ä–∞—Å–∏–≤—ã—Ö –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É–∫—Ä–∞—à–µ–Ω–∏–π –æ—Ç –±—Ä–µ–Ω–¥–∞ Cherry Story. –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º.\n –û–∫—É–Ω–∏—Ç–µ—Å—å –≤ –º–∏—Ä —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ —Å—Ç–∏–ª—è! üòä‚ú®`, {
                disable_notification: true,
                reply_markup: {
                    resize_keyboard: true,
                    keyboard: [
                        [{text: "Instagram Cherry Story", web_app: {url: instagramLink}}]
                    ]
                }
            });
            await bot.deleteMessage(chatId,messageId)
            setTimeout(async () => {
                await bot.sendMessage(chatId, ` –†–∞–∑–¥–µ–ª "–ú–µ–Ω—é" ‚ÜôÔ∏è —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.`, {disable_notification: true})
            }, 5000)
        } catch (e) {
            console.log(e.message)
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã categories
    if (text === "/categories") {
        try {
            await bot.sendMessage(chatId, `${msg.from.first_name},\n–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∫—Ä–∞—à–µ–Ω–∏–π, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å –∑–∞–±–æ—Ç–æ–π –∏ –ª—é–±–æ–≤—å—é –¥–ª—è –≤–∞—Å.üíïüí´`, {
                disable_notification: true,
                reply_markup: {
                    inline_keyboard: [
                        [{text: "–ö–æ–ª—å—Ü–∞", callback_data: 'get_rings'}, {text: "–°–µ—Ä—å–≥–∏", callback_data: 'get_earrings'}],
                        [{text: "–ß–æ–∫–µ—Ä—ã", callback_data: 'get_chokers'}, {text: "–ö–æ–ª—å–µ", callback_data: 'get_necklaces'}, {text: "–¶–µ–ø–∏", callback_data: 'get_chains'},],
                        [{text: "–ë—Ä–∞—Å–ª–µ—Ç—ã", callback_data: 'get_bracelets'}, {text: "–ê–Ω–∫–ª–µ—Ç—ã", callback_data: 'get_anclets'}],
                            [{text: "10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –∏–∑ Instagram", callback_data:'get_posts'}]
                    ]
                }
            });
            await bot.deleteMessage(chatId,messageId)
        } catch (e) {
            console.log(e.message)
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã pay
    if (text === '/pay') {
        try {
            await bot.sendMessage(chatId, '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–∞, –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ–ø–ª–∞—Ç—ã –í—ã –º–æ–∂–µ—Ç–µ, –Ω–∞–ø–∏—Å–∞–≤ –º–Ω–µ @cherry_story', {disable_notification: true})
            await bot.deleteMessage(chatId,messageId)
        } catch (e) {
            console.log(e.message)
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã care
    if (text === '/care') {
        try {
            await bot.sendMessage(chatId, '–•—Ä–∞–Ω–∏—Ç–µ —É–∫—Ä–∞—à–µ–Ω–∏—è –≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ, —Ä–∞–∑–¥–µ–ª—å–Ω–æ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞.üéÅ\n' +
                '\n' +
                ' –°–Ω–∏–º–∞–π—Ç–µ —É–∫—Ä–∞—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–∞–∫—Ç–æ–º —Å –≤–æ–¥–æ–π, –Ω–∞–Ω–µ—Å–µ–Ω–∏–µ–º –∫—Ä–µ–º–æ–≤ –∏ –ø–∞—Ä—Ñ—é–º–∞.üí¶\n' +
                '\n' +
                ' –ü–æ—Å–ª–µ –Ω–æ—à–µ–Ω–∏—è —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Ç–∏—Ä–∞–π—Ç–µ —É–∫—Ä–∞—à–µ–Ω–∏—è –º—è–≥–∫–æ–π —Ç–∫–∞–Ω–µ–≤–æ–π —Å–∞–ª—Ñ–µ—Ç–∫–æ–π.üß∫\n' +
                '\n' +
                ' –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–Ω–∏–º–∞—Ç—å —É–∫—Ä–∞—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–Ω–æ–º.üåô\n' +
                '\n' +
                ' –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–æ—Å–∏—Ç—å —É–∫—Ä–∞—à–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º –∏–ª–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∏–ª–∏ –ø–æ—Ç–µ—Ä–∏.‚õîÔ∏è', {disable_notification: true})

            setTimeout(async () => {
                await bot.sendMessage(chatId, '–≠—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–º–æ–≥—É—Ç –í–∞–º –¥–æ–ª—å—à–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥.üíç‚ú®', {disable_notification: true})
            }, 5000)

            setTimeout(async () => {
                await bot.sendMessage(chatId, '–ï—Å–ª–∏ —É –í–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–æ –º–Ω–µ –≤ —á–∞—Ç–µ @cherry_story.', {disable_notification: true})
            }, 10000)
            await bot.deleteMessage(chatId,messageId)
        } catch (e) {
            console.log(e.message)
        }
    }

    //–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã posts
    if (text === "/posts"){
        try {
            await bot.sendMessage(chatId, "–≠—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞–º —Ñ–æ—Ç–æ –∏–∑ –º–æ–∏—Ö –ø–æ—Å—Ç–æ–≤ –≤ Instagram, –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VPN", {
                disable_notification: true,
                reply_markup: {
                    inline_keyboard: [
                        [{text: "10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –∏–∑ Instagram", callback_data:'get_posts'}]
                    ]
                }
            })
            await bot.deleteMessage(chatId,messageId)
        } catch (e) {
            console.log(e.message);

        }
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const callbackData = query.data;

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_posts'
    if (callbackData === 'get_posts') {
        try {
            const response = await axios.get(instaPostsLimit10);
            const {data} = response.data;
            const mediaUrls = data.map(item => item.media_url);
            const chunks = chunkArray(mediaUrls, 10);
            for (let chunk of chunks) {
                await sendMedia(bot, chatId, chunk);
            }
            if (response.data.paging && response.data.paging.next) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –æ–±–Ω–æ–≤–ª—è–µ–º URL –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
                nextInstaPostsUrl = response.data.paging.next;
                // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–≤—ã—Ö 10 –ø–æ—Å—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤"
                await bot.sendMessage(chatId, "üëá–ó–¥–µ—Å—å –µ—â—ë 10 –ø–æ—Å—Ç–æ–≤üëá", {
                    disable_notification: true,
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤", callback_data: 'get_next_posts' }] // –ò–∑–º–µ–Ω–∏–ª –Ω–∞ 'get_next_posts' —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ 10 –ø–æ—Å—Ç–æ–≤
                        ]
                    }
                });
            }
        } catch (e) {
            console.log(e.message);
            await bot.sendMessage(chatId, "–£–ø—Å... Instagram, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–µ–Ω—è, –Ω–µ —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!üòâÔ∏èÔ∏è");
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_next_posts'
    if (callbackData === 'get_next_posts') {
        try {
            const response = await axios.get(nextInstaPostsUrl);
            const { data } = response.data;
            const mediaUrls = data.map(item => item.media_url);
            const chunks = chunkArray(mediaUrls, 10);
            for (let chunk of chunks) {
                await sendMedia(bot, chatId, chunk);
            }
            if (response.data.paging && response.data.paging.next) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –æ–±–Ω–æ–≤–ª—è–µ–º URL –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
                nextInstaPostsUrl = response.data.paging.next;
                // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–≤—ã—Ö 10 –ø–æ—Å—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤"
                await bot.sendMessage(chatId, "–ï—Å–ª–∏ –í—ã –Ω–∞—à–ª–∏ –∏–¥–µ–∞–ª—å–Ω–æ–µ —É–∫—Ä–∞—à–µ–Ω–∏–µ –¥–ª—è —Å–µ–±—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ —ç—Ç–æ–≥–æ —É–∫—Ä–∞—à–µ–Ω–∏—è @cherry_story. –ë—É–¥—É —Ä–∞–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.üå∏", {
                    disable_notification: true,
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤", callback_data: 'get_next_posts' }] // –ò–∑–º–µ–Ω–∏–ª –Ω–∞ 'get_next_posts' —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ 10 –ø–æ—Å—Ç–æ–≤
                        ]
                    }
                });
            }
        } catch (e) {
            console.log(e.message);
            await bot.sendMessage(chatId, "–£–ø—Å... Instagram, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–µ–Ω—è, –Ω–µ —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!üòâÔ∏èÔ∏è")
        }
    }


    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_rings'
    if (callbackData === 'get_rings') {
        try {
            await sendRingPosts(bot, chatId);
        } catch (e) {
            console.log(e.message);
        }
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_earrings'
    if (callbackData === 'get_earrings') {
        try {
            await sendEarringsPosts(bot, chatId);
        } catch (e) {
            console.log(e.message);
        }
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_chokers'
    if (callbackData === 'get_chokers') {
        try {
            await sendChokerPosts(bot, chatId);
        } catch (e) {
            console.log(e.message);
        }
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_necklace'
    if (callbackData === 'get_necklaces') {
        try {
            await sendNecklacePosts(bot, chatId);
        } catch (e) {
            console.log(e.message);
        }
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_chains'
    if (callbackData === 'get_chains') {
        try {
            await sendChainPosts(bot, chatId);
        } catch (e) {
            console.log(e.message);
        }
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_bracelets'
    if (callbackData === 'get_bracelets') {
        try {
            await sendBraceletPosts(bot, chatId);
        } catch (e) {
            console.log(e.message);
        }
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è callbackData === 'get_anclets'
    if (callbackData === 'get_anclets') {
        try {
            await sendAncletPosts(bot, chatId);
        } catch (e) {
            console.log(e.message);
        }
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤ —á–∞—Ç
async function sendMedia(bot, chatId, mediaUrls) {
    const media = [];
    for (let url of mediaUrls) {
        const mediaObject = {
            type: 'photo',
            media: url
        };
        media.push(mediaObject);
    }
    await bot.sendMediaGroup(chatId, media, {
        disable_notification: true,
    });
}

// –†–∞–∑–±–∏–≤–∞–µ–º URL-–∞–¥—Ä–µ—Å–∞ –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 10
function chunkArray(array, size) {
    const result = [];
    for (let i = 0; i < array.length; i += size) {
        result.push(array.slice(i, i + size));
    }
    return result;
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤ —á–∞—Ç –ø–æ —Ö—ç—à—Ç–µ–≥—É
async function fetchAndSendCategoryPosts(bot, chatId, hashtag) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å Instagram API
        const response = await axios.get(instaPosts);
        const { data } = response.data;

        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ—Å—Ç—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö –≤ –ø–æ–ª–µ "caption" –µ—Å—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ö—ç—à—Ç–µ–≥
        const categoryPosts = data.filter((item) => {
            const caption = item.caption ? item.caption.toLowerCase() : '';
            return caption.includes(hashtag);
        });

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –¥–æ 10
        const first10CategoryPosts = categoryPosts.slice(0, 10);

        // –ò–∑–≤–ª–µ–∫–∞–µ–º URL-–∞–¥—Ä–µ—Å–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
        const mediaUrls = first10CategoryPosts.map((item) => item.media_url);

        // –†–∞–∑–±–∏–≤–∞–µ–º URL-–∞–¥—Ä–µ—Å–∞ –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 10 –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        const chunks = chunkArray(mediaUrls, 10);
        for (let chunk of chunks) {
            await sendMedia(bot, chatId, chunk);
        }
        await bot.sendMessage(chatId, '–ë–æ–ª—å—à–µ —É–∫—Ä–∞—à–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –í—ã –Ω–∞–π–¥–µ—Ç–µ –Ω–∞ –º–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ Instagram');
    } catch (e) {
        console.log(e.message);
    }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function sendRingPosts(bot, chatId) {
    await fetchAndSendCategoryPosts(bot, chatId, '#–∫–æ–ª—å—Ü–æ');
}

async function sendEarringsPosts(bot, chatId) {
    await fetchAndSendCategoryPosts(bot, chatId, '#—Å–µ—Ä—å–≥–∏');
}

async function sendChokerPosts(bot, chatId) {
    await fetchAndSendCategoryPosts(bot, chatId, '#—á–æ–∫–µ—Ä');
}

async function sendNecklacePosts(bot, chatId) {
    await fetchAndSendCategoryPosts(bot, chatId, '#–∫–æ–ª—å–µ');
}

async function sendChainPosts(bot, chatId) {
    await fetchAndSendCategoryPosts(bot, chatId, '#—Ü–µ–ø—å');
}

async function sendBraceletPosts(bot, chatId) {
    await fetchAndSendCategoryPosts(bot, chatId, '#–±—Ä–∞—Å–ª–µ—Ç');
}

async function sendAncletPosts(bot, chatId) {
    await fetchAndSendCategoryPosts(bot, chatId, '#–∞–Ω–∫–ª–µ—Ç');
}

(async () => {
    await checkAndRefreshTokenIfNeeded();
})();
