
require("dotenv").config()
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, {polling: true});

// Instagram API
const instaPosts = `https://graph.instagram.com/me/media?fields=id,media_type,media_url,caption,timestamp,thumbnail_url,permalink,children{fields=id,media_url,thumbnail_url,permalink}&limit=1000&access_token=${process.env.INSTAGRAM_TOKEN}`

// Instagram API
const instaPostsLimit10 = `https://graph.instagram.com/me/media?fields=id,media_type,media_url,caption,timestamp,thumbnail_url,permalink,children{fields=id,media_url,thumbnail_url,permalink}&limit=10&access_token=${process.env.INSTAGRAM_TOKEN}`

// –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const followersChannel = process.env.FOLLOWERS_CHANNEL;

// –§—É–Ω–∫—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
const {
    handleStartCommand,
    handleCategoriesCommand,
    handlePayCommand,
    handleCareCommand,
    handlePostsCommand,
    handleQuantityUsers
} = require('./botCommands');

//–§—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–Ω–∏–Ω–∞–Ω–∏–π
const {
    happyNY,
    march,
    reminderWinter,
    reminderSpring,
    reminderSummer,
    reminderAutumn
} = require('./newsLetter');


// –ö–µ–π—Å—ã –∑–∞–ø—Ä–æ—Å–æ–≤
const GET_POSTS = 'get_posts';
const GET_NEXT_POSTS = 'get_next_posts';
const GET_NEXT_CATEGORY_POSTS = 'get_next_category_posts';
const CATEGORY_MAP = {
    'get_rings': '–∫–æ–ª—å—Ü–æ',
    'get_earrings': '—Å–µ—Ä—å–≥–∏',
    'get_chokers': '—á–æ–∫–µ—Ä',
    'get_necklaces': '–∫–æ–ª—å–µ',
    'get_chains': '—Ü–µ–ø—å',
    'get_bracelets': '–±—Ä–∞—Å–ª–µ—Ç',
    'get_anklets': '–∞–Ω–∫–ª–µ—Ç'
};

//–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ—Å—Ç—ã –∏–∑ Instagram API
let nextInstaPostsUrl = instaPostsLimit10;
//–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ—Å—Ç—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
let nextCategoryPostsUrl = instaPosts;

//Username –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
//let globalUsername = '';
// callbackData —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
let buttonCallbackData = '';

// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
let allMediaUrls = [];
// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
let allMediaCategoryUrls = [];

let count = 0;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    const username = msg.from.username ?? 'anonymous user';
    const {checkAndRefreshTokenIfNeeded} = require('./refreshInstaToken');
    try {
        switch (text) {
            case '/start':
                await handleStartCommand(bot, msg, chatId);
                await checkAndRefreshTokenIfNeeded(bot, msg);
                count++;
                await reminderWinter(bot, msg);
                await happyNY(bot, msg);
                await march(bot, msg);
                await reminderSpring(bot, msg);
                await reminderSummer(bot, msg);
                await reminderAutumn(bot, msg);
                break;
            case '/categories':
                await handleCategoriesCommand(bot, msg);
                break;
            case '/pay':
                await handlePayCommand(bot, msg);
                break;
            case '/care':
                await handleCareCommand(bot, msg);
                break;
            case '/posts':
                await handlePostsCommand(bot, msg);
                break;
            case '/how many users':
                await handleQuantityUsers(bot, count);
                break;
            default:
                // await bot.forwardMessage(myId, chatId, messageId);
                await bot.sendMessage(chatId, "–Ø –≤—Å–µ–≥–æ –ª–∏—à—å –±–æ—Ç –∏ –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã.üòîÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏ –º–æ–µ–π –≥–æ—Å–ø–æ–∂–µ @cherry_story\n –í–æ–æ–±—â–µ, –Æ–ª—è –º–Ω–µ –Ω–µ –≥–æ—Å–ø–æ–∂–∞, –Ω–æ –µ–π –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–æ–≥–¥–∞ —è –µ—ë —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞—é.", {disable_notification: true});
                setTimeout(async () => {
                    await bot.sendMessage(chatId, ` –†–∞–∑–¥–µ–ª "–ú–µ–Ω—é" ‚ÜôÔ∏è —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.`, {disable_notification: true})
                }, 3000);
                break;
        }
    } catch (e) {
        console.log(`–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ message –æ—à–∏–±–∫–∞:${e.message}`);
        await bot.sendMessage(followersChannel, `–£ @${username} –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ commands –æ—à–∏–±–∫–∞:${e.message}`)
        await bot.sendMessage(chatId, '–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const callbackData = query.data;
    const username = query.message.chat.username;

    try {
        switch (callbackData) {
            case GET_POSTS:
                await handleGetPosts(chatId, username);
                break;
            case GET_NEXT_POSTS:
                await handleGetNextPosts(chatId, username);
                break;
            case GET_NEXT_CATEGORY_POSTS:
                await handleNextCategoryPosts(chatId, buttonCallbackData, username)
                break;
            default:
                if (callbackData in CATEGORY_MAP) {
                    await handleCategory(chatId, CATEGORY_MAP[callbackData], username);
                    buttonCallbackData = CATEGORY_MAP[callbackData];
                }
                break;
        }
    } catch (e) {
        console.error(`–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback_query –æ—à–∏–±–∫–∞:${e.message}`);
        await bot.sendMessage(followersChannel, `–£ @${username} –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ commands –æ—à–∏–±–∫–∞:${e.message}`);
        await bot.sendMessage(chatId, '–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
});

//–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback === GET_POSTS
async function handleGetPosts(chatId, username) {
    try {
        await bot.sendChatAction(chatId, 'upload_photo')
        const response = await axios.get(instaPostsLimit10);
        const {data} = response.data;

        for (let item of data) {
            if (item.media_type === 'CAROUSEL_ALBUM' && item.children && item.children.data.length > 0) {
                // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ä—É—Å–µ–ª—å, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫–∞—Ä—É—Å–µ–ª–∏
                allMediaUrls.push(...item.children.data.map(child => child.media_url));
            } else {
                // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                allMediaUrls.push(item.media_url);
            }
        }
        console.log(`–±—ã–ª–æ:${allMediaUrls.length}`)

        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –æ–±–Ω–æ–≤–ª—è–µ–º URL –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
        if (response.data.paging && response.data.paging.next) {
            nextInstaPostsUrl = response.data.paging.next;
        } else {
            nextInstaPostsUrl = null;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 10 –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
        const firstMediaUrls = allMediaUrls.slice(0, 10);
        await sendMedia(bot, chatId, firstMediaUrls);

        // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞
        allMediaUrls.splice(0, 10);
        console.log(`–æ—Å—Ç–∞–ª–æ—Å—å:${allMediaUrls.length}`)

        if (nextInstaPostsUrl) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤"
            await bot.sendMessage(chatId, "üëá–ó–¥–µ—Å—å –µ—â—ë 10 –ø–æ—Å—Ç–æ–≤üëá", {
                disable_notification: true,
                reply_markup: {
                    inline_keyboard: [
                        [{text: "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤", callback_data: 'get_next_posts'}]
                    ]
                }
            });
        }
        await bot.sendMessage(followersChannel, `@${username} —Å–º–æ—Ç—Ä–∏—Ç –≤—Å–µ –ø–æ—Å—Ç—ã –∏–∑ Instagram`,{disable_notification: true})
        setTimeout(async ()=>{ await cleaningArray(allMediaUrls)
        },2 * 60 * 60 * 1000);
    } catch (e) {
        await bot.sendMessage(chatId, "–£–ø—Å... Instagram, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–µ–Ω—è, –Ω–µ —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. \nÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!üòâÔ∏èÔ∏è");
        await bot.sendMessage(followersChannel, `–£ @${username} –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã, –æ—à–∏–±–∫–∞:${e.message}`)
        console.log(`–≤ —Ñ—É–∫—Ü–∏–∏ handleGetPosts –æ—à–∏–±–∫–∞:${e.message}`);
    }
}

//–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback === GET_NEXT_POSTS
async function handleGetNextPosts(chatId, username) {
    try {
        await bot.sendChatAction(chatId, 'upload_photo')
        // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç, –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–∑ Instagram
        if (allMediaUrls.length === 0) {
            const response = await axios.get(nextInstaPostsUrl);
            const {data} = response.data;

            // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ä—É—Å–µ–ª—å, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫–∞—Ä—É—Å–µ–ª–∏
            for (let item of data) {
                if (item.media_type === 'CAROUSEL_ALBUM' && item.children && item.children.data.length > 0) {
                    allMediaUrls.push(...item.children.data.map(child => child.media_url));
                } else {
                    // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    allMediaUrls.push(item.media_url);
                }
            }

            console.log(`–±—ã–ª–æ:${allMediaUrls.length}`);

            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –æ–±–Ω–æ–≤–ª—è–µ–º URL –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
            if (response.data.paging && response.data.paging.next) {
                nextInstaPostsUrl = response.data.paging.next;
            } else {
                nextInstaPostsUrl = null;
            }
        }

        if (allMediaUrls.length > 0) {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 10 –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
            const firstMediaUrls = allMediaUrls.slice(0, 10);
            await sendMedia(bot, chatId, firstMediaUrls);

            // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞
            allMediaUrls.splice(0, 10);
            console.log(`–æ—Å—Ç–∞–ª–æ—Å—å:${allMediaUrls.length}`)
            if (allMediaUrls.length === 0) {
                // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—É—Å—Ç, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏ –º–∞—Å—Å–∏–≤–∞
                allMediaUrls.length = 0;
            }

            if (nextInstaPostsUrl) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤"
                await bot.sendMessage(chatId, "–ï—Å–ª–∏ —Ç—ã –Ω–∞—à–ª–∞ –∏–¥–µ–∞–ª—å–Ω–æ–µ —É–∫—Ä–∞—à–µ–Ω–∏–µ –¥–ª—è —Å–µ–±—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —ç—Ç–æ–≥–æ —É–∫—Ä–∞—à–µ–Ω–∏—è @cherry_story.\n –ë—É–¥—É —Ä–∞–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.üå∏", {
                    disable_notification: true,
                    reply_markup: {
                        inline_keyboard: [
                            [{text: "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤", callback_data: 'get_next_posts'}]
                        ]
                    }
                });
            }
        } else {
            // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—É—Å—Ç, —Å–æ–æ–±—â–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –±–æ–ª—å—à–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç
            await bot.sendMessage(chatId, "–¢—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∞ –≤—Å–µ –ø–æ—Å—Ç—ã.",{disable_notification: true});
            await bot.sendMessage(followersChannel, `@${username} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –≤—Å–µ –ø–æ—Å—Ç—ã –∏–∑ Instagram`,{disable_notification: true})
        }
        setTimeout(async ()=>{ await cleaningArray(allMediaUrls)
        },2 * 60 * 60 * 1000);
    } catch (e) {
        await bot.sendMessage(chatId, "–£–ø—Å... Instagram, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–µ–Ω—è, –Ω–µ —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. \nÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!üòâÔ∏èÔ∏è");
        await bot.sendMessage(followersChannel, `–£ @${username} –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ—Å—Ç—ã, –æ—à–∏–±–∫–∞:${e.message}`)
        console.log(`–≤ —Ñ—É–∫—Ü–∏–∏ handleGetNextPosts –æ—à–∏–±–∫–∞:${e.message}`);
    }
}

//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ CATEGORY_MAP –≤ —á–∞—Ç
async function handleCategory(chatId, hashtag, username) {
    try {
        await bot.sendChatAction(chatId, 'upload_photo')

        // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –∏–∑ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        allMediaCategoryUrls = [];

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ Instagram API
        const response = await axios.get(instaPosts);
        const {data} = response.data;

        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ—Å—Ç—ã –ø–æ —Ö—ç—à—Ç–µ–≥—É
        for (let item of data) {
            if (item.caption && item.caption.toLowerCase().includes(hashtag)) {

                // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ä—É—Å–µ–ª—å, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫–∞—Ä—É—Å–µ–ª–∏
                if (item.media_type === 'CAROUSEL_ALBUM' && item.children && item.children.data.length > 0) {
                    allMediaCategoryUrls.push(...item.children.data.map(child => child.media_url));
                } else {

                    // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    allMediaCategoryUrls.push(item.media_url);

                }
            }
        }

        console.log(`${hashtag} –±—ã–ª–æ: ${allMediaCategoryUrls.length}`);

        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –æ–±–Ω–æ–≤–ª—è–µ–º URL –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
        if (response.data.paging && response.data.paging.next) {
            nextCategoryPostsUrl = response.data.paging.next;
        } else {
            nextCategoryPostsUrl = null;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 10 –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
        const firstMediaUrls = allMediaCategoryUrls.slice(0, 10);
        await sendMedia(bot, chatId, firstMediaUrls);

        // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞
        allMediaCategoryUrls.splice(0, 10);
        console.log(`${hashtag} –æ—Å—Ç–∞–ª–æ—Å—å: ${allMediaCategoryUrls.length}`);

        if (nextCategoryPostsUrl) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤"
            await bot.sendMessage(chatId, "üëá–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤ –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üëá", {
                disable_notification: true,
                reply_markup: {
                    inline_keyboard: [
                        [{text: '–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤', callback_data: 'get_next_category_posts'}]
                    ]
                }
            });
        }
        setTimeout(async () => {
            await sendQuotes(chatId,hashtag)
        }, 3000)
        setTimeout(async ()=>{ await cleaningArray(allMediaCategoryUrls)
        }, 2 * 60 * 20 * 1000);
        await bot.sendMessage(followersChannel, `@${username} —Å–º–æ—Ç—Ä–∏—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${hashtag}`,{disable_notification: true});
    } catch (e) {
        await bot.sendMessage(chatId, "–£–ø—Å... Instagram, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–µ–Ω—è, –Ω–µ —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. Ô∏èÔ∏èÔ∏èÔ∏èÔ∏è\n –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!üòâÔ∏èÔ∏è");
        await bot.sendMessage(followersChannel, `–£ @${username} –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ${hashtag}, –æ—à–∏–±–∫–∞:${e.message}`)
        console.log(`–≤ —Ñ—É–∫—Ü–∏–∏ handleCategory –æ—à–∏–±–∫–∞:${e.message}`);
    }
}

//–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback === GET_NEXT_CATEGORY_POSTS
async function handleNextCategoryPosts(chatId, hashtag, username) {
    try {
        await bot.sendChatAction(chatId, 'upload_photo')
        if (allMediaCategoryUrls.length === 0) {
            // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç, –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–∑ Instagram
            const response = await axios.get(nextCategoryPostsUrl);
            const {data} = response.data;

            for (let item of data) {
                // –§–∏–ª—å—Ç—Ä—É–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –ø–æ —Ö—ç—à—Ç–µ–≥—É
                if (item.caption && item.caption.toLowerCase().includes(hashtag)) {
                    // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ä—É—Å–µ–ª—å, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫–∞—Ä—É—Å–µ–ª–∏
                    if (item.media_type === 'CAROUSEL_ALBUM' && item.children && item.children.data.length > 0) {
                        allMediaCategoryUrls.push(...item.children.data.map(child => child.media_url));
                    } else {
                        // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        allMediaCategoryUrls.push(item.media_url);
                    }
                }
            }
            console.log(`${hashtag} –±—ã–ª–æ:${allMediaCategoryUrls.length}`);

            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –æ–±–Ω–æ–≤–ª—è–µ–º URL –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
            if (response.data.paging && response.data.paging.next) {
                nextCategoryPostsUrl = response.data.paging.next;
            } else {
                nextCategoryPostsUrl = null;
                allMediaCategoryUrls = [];
            }
        }
        if (allMediaCategoryUrls.length > 0) {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 10 –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
            const firstMediaUrls = allMediaCategoryUrls.slice(0, 10);
            await sendMedia(bot, chatId, firstMediaUrls);

            // –£–¥–∞–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞
            allMediaCategoryUrls.splice(0, 10);
            console.log(`${hashtag} –æ—Å—Ç–∞–ª–æ—Å—å:${allMediaCategoryUrls.length}`)
            if (nextCategoryPostsUrl) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤"
                await bot.sendMessage(chatId, "–ï—Å–ª–∏ —Ç—ã –Ω–∞—à–ª–∞ –∏–¥–µ–∞–ª—å–Ω–æ–µ —É–∫—Ä–∞—à–µ–Ω–∏–µ –¥–ª—è —Å–µ–±—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —ç—Ç–æ–≥–æ —É–∫—Ä–∞—à–µ–Ω–∏—è @cherry_story. –ë—É–¥—É —Ä–∞–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üå∏", {
                    disable_notification: true,
                    reply_markup: {
                        inline_keyboard: [
                            [{text: "–ï—â—ë 10 –ø–æ—Å—Ç–æ–≤ –ø–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data: 'get_next_category_posts'}]
                        ]
                    }
                });
            }
        } else {
            // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—É—Å—Ç, —Å–æ–æ–±—â–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –±–æ–ª—å—à–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç
            await bot.sendMessage(chatId, "–ë–æ–ª—å—à–µ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.",{disable_notification: true});
            await bot.sendMessage(followersChannel, `@${username} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –≤—Å–µ –ø–æ—Å—Ç—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${hashtag}`,{disable_notification: true})
        }
        setTimeout(async ()=>{ await cleaningArray(allMediaCategoryUrls)
        },2 * 60 * 60 * 1000);
        await bot.sendMessage(followersChannel, `@${username} —Å–º–æ—Ç—Ä–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ—Å—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${hashtag}`,{disable_notification: true});
    } catch (e) {
        await bot.sendMessage(chatId, "–£–ø—Å... Instagram, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–µ–Ω—è, –Ω–µ —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. \nÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!üòâÔ∏èÔ∏è");
        await bot.sendMessage(followersChannel, `–£ @${username} –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ—Å—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${hashtag}, –æ—à–∏–±–∫–∞:${e.message}`)
        console.log(`–≤ —Ñ—É–∫—Ü–∏–∏ handleNextCategoryPosts –æ—à–∏–±–∫–∞:${e.message}`);
    }
}

//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤ —á–∞—Ç
async function sendMedia(bot, chatId, mediaUrls, username) {
    try {
        const photoMedia = [];
        const videoMedia = [];

        for (let url of mediaUrls) {
            const mediaType = url.includes('.mp4') ? 'video' : 'photo';

            if (mediaType === 'photo') {
                const mediaObject = {
                    type: 'photo',
                    media: url
                };
                photoMedia.push(mediaObject);
            } else {
                const objectVideo = {
                    type: 'video',
                    media: url
                };
                videoMedia.push(objectVideo)
            }
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –º–∞—Å—Å–∏–≤—ã –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤
        if (photoMedia.length === 0 && videoMedia.length > 0) {
            await bot.sendMediaGroup(chatId, videoMedia, {disable_notification: true});
        } else if (photoMedia.length > 0 && videoMedia.length === 0) {
            await bot.sendMediaGroup(chatId, photoMedia, {disable_notification: true});
        } else if (photoMedia.length > 0 && videoMedia.length > 0) {
            // –ï—Å–ª–∏ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –Ω–µ –ø—É—Å—Ç—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –æ–±–∞
            await bot.sendMediaGroup(chatId, photoMedia, {disable_notification: true});
            await bot.sendMediaGroup(chatId, videoMedia, {disable_notification: true});
        }
    } catch (e) {
        await bot.sendMessage(followersChannel, `@${username} –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –º–µ–¥–∏–∞, –æ—à–∏–±–∫–∞:${e.message}`)
        console.log(`–≤ —Ñ—É–∫—Ü–∏–∏ sendMedia –æ—à–∏–±–∫–∞:${e.message}`);
    }
}

//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ü–∏—Ç–∞—Ç
async function sendQuotes(chatId, hashtag, username) {
    try {
        if (hashtag === '–∫–æ–ª—å—Ü–æ') {
            await bot.sendMessage(chatId, '"–°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –≤ –º–æ–¥–µ - —ç—Ç–æ –¥–æ–≤–µ—Ä–∏–µ —Å–µ–±–µ. –ï—Å–ª–∏ –≤—ã –Ω–µ –≤–µ—Ä–∏—Ç–µ –≤ —Å–µ–±—è, –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π –Ω–µ –ø–æ–≤–µ—Ä–∏—Ç."(Tom Ford)', {disable_notification: true});
        } else if (hashtag === '—Å–µ—Ä—å–≥–∏') {
            await bot.sendMessage(chatId, '"–ñ–µ–Ω—â–∏–Ω–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —É–∫—Ä–∞—à–µ–Ω–∏–π. (Coco Chanel)', {disable_notification: true});
        } else if (hashtag === '—á–æ–∫–µ—Ä') {
            await bot.sendMessage(chatId, '"–ú–æ–¥–∞ - —ç—Ç–æ —á–∏—Å—Ç–æ –≤–Ω–µ—à–Ω—è—è –≤–µ—â—å, —Å—Ç–∏–ª—å - —ç—Ç–æ –Ω–µ—á—Ç–æ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–µ." (Karl Lagerfeld)', {disable_notification: true});
        } else if (hashtag === '–∫–æ–ª—å–µ') {
            await bot.sendMessage(chatId, '"–¢–æ, —á—Ç–æ –≤—ã –Ω–æ—Å–∏—Ç–µ, ‚Äî —ç—Ç–æ —Ç–æ, –∫–∞–∫ –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–µ–±—è –º–∏—Ä—É, –æ—Å–æ–±–µ–Ω–Ω–æ —Å–µ–≥–æ–¥–Ω—è, –∫–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ. –ú–æ–¥–∞ ‚Äî —ç—Ç–æ –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫¬ª" (Miuccia Prada)', {disable_notification: true});
        } else if (hashtag === '—Ü–µ–ø—å') {
            await bot.sendMessage(chatId, '"–ú–æ–¥–∞ - —ç—Ç–æ –∫–∞–∂—É—â–∞—è—Å—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å, –∞ —Å—Ç–∏–ª—å - —ç—Ç–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å." (Alexander McQueen)', {disable_notification: true});
        } else if (hashtag === '–±—Ä–∞—Å–ª–µ—Ç') {
            await bot.sendMessage(chatId, '"–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ –≤–µ–ª–∏–∫–æ–π –º–æ–¥—ã: –∫–∞—á–µ—Å—Ç–≤–æ –≤–µ—â–µ–π –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –º–æ–¥—ã." (Christian Dior)', {disable_notification: true});
        } else {
            await bot.sendMessage(chatId, '"–ú–æ–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏ —É—Ö–æ–¥–∏—Ç, –Ω–æ —Å—Ç–∏–ª—å –≤–µ—á–µ–Ω." (Yves Saint Laurent)', {disable_notification: true});
        }
    } catch (e) {
        await bot.sendMessage(followersChannel, `@${username} –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å —Ü–∏—Ç–∞—Ç—ã, –æ—à–∏–±–∫–∞:${e.message}`)
        console.log(`–≤ —Ñ—É–∫—Ü–∏–∏ sendQuotes –æ—à–∏–±–∫–∞:${e.message}`);
    }
}

//–§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –º–∞—Å—Å–∏–≤–æ–≤
async function cleaningArray(username){
    try{
        allMediaUrls =  [];
        allMediaCategoryUrls = [];
    } catch (e) {
        await bot.sendMessage(followersChannel, `@${username} –Ω–µ –æ—á–∏—Å—Ç–∏–ª–∏—Å—å –º–∞—Å—Å–∏–≤—ã —Å –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞–º–∏, –æ—à–∏–±–∫–∞:${e.message}`)
        console.log(`–≤ —Ñ—É–∫—Ü–∏–∏ cleaningArray –æ—à–∏–±–∫–∞:${e.message}`);
    }
}